/*
File: Extensions.cpp
Author:	Abramov Nickolai
Description: Load OpenGL functions
*/
#include "extensions_win32.h"
#include "driver_win32.h"
#include "../../../../system.h"

namespace OpenGL
{
	PFNGLGETBUFFERPARAMETERI64VPROC glGetBufferParameteri64v;
	PFNGLGETBUFFERPARAMETERIVPROC glGetBufferParameteriv;
	PFNGLGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64v;
	PFNGLGETBUFFERPOINTERVPROC glGetBufferPointerv;
	PFNGLTEXPARAMETERIPROC glTexParameteri;
	PFNGLPIXELSTOREIPROC glPixelStorei;
	PFNGLPIXELSTOREFPROC glPixelStoref;
	PFNGLBLENDCOLORPROC glBlendColor;
	PFNGLBLENDEQUATIONPROC glBlendEquation;
	PFNGLBLENDEQUATIONIPROC glBlendEquationi;
	PFNGLBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
	PFNGLBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
	PFNGLENABLEIPROC glEnablei;
	PFNGLBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
	PFNGLBLENDFUNCPROC glBlendFunc;
	PFNGLBLENDFUNCIPROC glBlendFunci;
	PFNGLACTIVETEXTUREPROC glActiveTexture;
	PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
	PFNWGLSWAPINTERVALEXTPROC wglSwapIntervalEXT;
	PFNWGLGETEXTENSIONSSTRINGARBPROC wglGetExtensionsStringARB;
	PFNGLBUFFERDATAPROC glBufferData;
	PFNGLBUFFERSUBDATAPROC glBufferSubData;
	PFNGLGETBUFFERSUBDATAPROC glGetBufferSubData;
	PFNGLGENBUFFERSPROC glGenBuffers;
	PFNGLBINDBUFFERPROC glBindBuffer;
	PFNGLDELETEBUFFERSPROC glDeleteBuffers;
	PFNGLMAPBUFFERPROC glMapBuffer;
	PFNGLUNMAPBUFFERPROC glUnmapBuffer;
	PFNGLISBUFFERPROC glIsBuffer;
	PFNGLISRENDERBUFFERPROC glIsRenderbuffer;
	PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
	PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
	PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
	PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
	PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
	PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
	PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
	PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
	PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
	PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
	PFNGLFRAMEBUFFERTEXTUREPROC glFramebufferTexture1D;
	PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
	PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
	PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
	PFNGLCREATESHADERPROC glCreateShader;
	PFNGLCREATEPROGRAMPROC glCreateProgram;
	PFNGLDELETESHADERPROC glDeleteShader;
	PFNGLDELETEPROGRAMPROC glDeleteProgram;
	PFNGLSHADERSOURCEPROC glShaderSource;
	PFNGLCOMPILESHADERPROC glCompileShader;
	PFNGLATTACHSHADERPROC glAttachShader;
	PFNGLDETACHSHADERPROC glDetachShader;
	PFNGLLINKPROGRAMPROC glLinkProgram;
	PFNGLUSEPROGRAMPROC glUseProgram;
	PFNGLVALIDATEPROGRAMPROC glValidateProgram;
	PFNGLUNIFORM1FPROC glUniform1f;
	PFNGLUNIFORM1FVPROC glUniform1fv;
	PFNGLUNIFORM1IPROC glUniform1i;
	PFNGLUNIFORM1IVPROC glUniform1iv;
	PFNGLUNIFORM2FPROC glUniform2f;
	PFNGLUNIFORM2FVPROC glUniform2fv;
	PFNGLUNIFORM2IVPROC glUniform2iv;
	PFNGLUNIFORM3FPROC glUniform3f;
	PFNGLUNIFORM3IVPROC glUniform3iv;
	PFNGLUNIFORM3FVPROC glUniform3fv;
	PFNGLUNIFORM3IPROC glUniform3i;
	PFNGLUNIFORM4FPROC glUniform4f;
	PFNGLUNIFORM4IVPROC glUniform4iv;
	PFNGLUNIFORM4FVPROC glUniform4fv;
	PFNGLUNIFORM4IPROC glUniform4i;
	PFNGLUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
	PFNGLUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
	PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
	PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform;
	PFNGLGETATTACHEDSHADERSPROC glGetAttachedShaders;
	PFNGLGETSHADERSOURCEPROC glGetShaderSource;
	PFNGLGETUNIFORMFVPROC glGetUniformfv;
	PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
	PFNGLVERTEXATTRIB1DPROC glVertexAttrib1d;
	PFNGLVERTEXATTRIB1DVPROC glVertexAttrib1dv;
	PFNGLVERTEXATTRIB1FPROC glVertexAttrib1f;
	PFNGLVERTEXATTRIB1FVPROC glVertexAttrib1fv;
	PFNGLVERTEXATTRIB1SPROC glVertexAttrib1s;
	PFNGLVERTEXATTRIB1SVPROC glVertexAttrib1sv;
	PFNGLVERTEXATTRIB2DPROC glVertexAttrib2d;
	PFNGLVERTEXATTRIB2DVPROC glVertexAttrib2dv;
	PFNGLVERTEXATTRIB2FPROC glVertexAttrib2f;
	PFNGLVERTEXATTRIB2FVPROC glVertexAttrib2fv;
	PFNGLVERTEXATTRIB2SPROC glVertexAttrib2s;
	PFNGLVERTEXATTRIB2SVPROC glVertexAttrib2sv;
	PFNGLVERTEXATTRIB3DPROC glVertexAttrib3d;
	PFNGLVERTEXATTRIB3DVPROC glVertexAttrib3dv;
	PFNGLVERTEXATTRIB3FPROC glVertexAttrib3f;
	PFNGLVERTEXATTRIB3FVPROC glVertexAttrib3fv;
	PFNGLVERTEXATTRIB3SPROC glVertexAttrib3s;
	PFNGLVERTEXATTRIB3SVPROC glVertexAttrib3sv;
	PFNGLVERTEXATTRIB4DPROC glVertexAttrib4d;
	PFNGLVERTEXATTRIB4DVPROC glVertexAttrib4dv;
	PFNGLVERTEXATTRIB4FPROC glVertexAttrib4f;
	PFNGLVERTEXATTRIB4FVPROC glVertexAttrib4fv;
	PFNGLVERTEXATTRIB4SPROC glVertexAttrib4s;
	PFNGLVERTEXATTRIB4SVPROC glVertexAttrib4sv;
	PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
	PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
	PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
	PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
	PFNGLGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
	PFNGLGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
	PFNGLGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
	PFNGLGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
	PFNGLGETACTIVEATTRIBPROC glGetActiveAttrib;
	PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation;
	PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
	PFNGLGETSTRINGIPROC glGetStringi;
	PFNGLGETERRORPROC glGetError;
	PFNGLGETINTEGERVPROC glGetIntegerv;
	PFNGLVIEWPORTPROC glViewport;
	PFNGLCLEARCOLORPROC glClearColor;
	PFNGLENABLEPROC glEnable;
	PFNGLDISABLEPROC glDisable;
	PFNGLREADPIXELSPROC glReadPixels;
	PFNGLGETSTRINGPROC glGetString;
	PFNGLGENTEXTURESPROC glGenTextures;
	PFNGLBINDTEXTUREPROC glBindTexture;
	PFNGLTEXPARAMETERFPROC glTexParameterf;
	PFNGLTEXPARAMETERFVPROC glTexParameterfv;
	PFNGLTEXIMAGE2DPROC glTexImage2D;
	PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
	PFNGLDELETETEXTURESPROC glDeleteTextures;
	PFNGLDRAWBUFFERPROC glDrawBuffer;
	PFNGLREADBUFFERPROC glReadBuffer;
	PFNGLGETSHADERIVPROC glGetShaderiv;
	PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
	PFNGLGETPROGRAMIVPROC glGetProgramiv;
	PFNGLGENVERTEXARRAYSPROC glGenVertexArrays;
	PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays;
	PFNGLBINDVERTEXARRAYPROC glBindVertexArray;
	PFNGLDRAWARRAYSPROC glDrawArrays;
	PFNGLDRAWARRAYSINDIRECTPROC glDrawArraysIndirect;
	PFNGLDRAWARRAYSINSTANCEDPROC glDrawArraysInstanced;
	PFNGLDRAWELEMENTSPROC glDrawElements;
	PFNGLDRAWELEMENTSINDIRECTPROC glDrawElementsIndirect;
	PFNGLDRAWELEMENTSINSTANCEDPROC glDrawElementsInstanced;
	PFNGLCLEARPROC glClear;
	PFNGLTEXSUBIMAGE2DPROC glTexSubImage2D;
	PFNGLPOLYGONMODEPROC glPolygonMode;

	bool IsSupported(const char* extension, Driver* driver)
	{
		const char* allWgl = wglGetExtensionsStringARB(::GetDC(*driver->GetWindow()));
		int num;
		glGetIntegerv(GL_NUM_EXTENSIONS, &num);
		const char* ptr;
		const char* start;
		start = allWgl;
		for (int i = 0; i < num; i++)
		{
			const char* ext = (const char*)glGetStringi(GL_EXTENSIONS, i);
			if ((ptr = strstr(extension, ext)) != NULL)
			{
				const char* end = ptr + strlen(extension);
				if (isspace(*end) || *end == '\0')
				{
					System::Logger::GetInstance()->WriteMessage(System::string::Format(L"[Video] %s is supported", System::string(extension).Data()));
					return true;
				}
			}
		}
		System::Logger::GetInstance()->WriteWarning(System::string::Format(L"[Video] %s is not supported", System::string(extension).Data()));
		return false;
	};

	void InitExtensions(Driver* driver)
	{
		wglGetExtensionsStringARB = (PFNWGLGETEXTENSIONSSTRINGARBPROC)driver->GetProcAddress("wglGetExtensionsStringARB");
		glTexParameterf = (PFNGLTEXPARAMETERFPROC)driver->GetProcAddress("glTexParameterf");
		glBindTexture = (PFNGLBINDTEXTUREPROC)driver->GetProcAddress("glBindTexture");
		glGetIntegerv = (PFNGLGETINTEGERVPROC)driver->GetProcAddress("glGetIntegerv");
		wglSwapIntervalEXT = (PFNWGLSWAPINTERVALEXTPROC)driver->GetProcAddress("wglSwapIntervalEXT");
		glGetStringi = (PFNGLGETSTRINGIPROC)driver->GetProcAddress("glGetStringi");
		glGetError = (PFNGLGETERRORPROC)driver->GetProcAddress("glGetError");
		glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)driver->GetProcAddress("glDrawRangeElements");
		glViewport = (PFNGLVIEWPORTPROC)driver->GetProcAddress("glViewport");
		glClearColor = (PFNGLCLEARCOLORPROC)driver->GetProcAddress("glClearColor");
		glEnable = (PFNGLENABLEPROC)driver->GetProcAddress("glEnable");
		glDisable = (PFNGLDISABLEPROC)driver->GetProcAddress("glDisable");
		glReadPixels = (PFNGLREADPIXELSPROC)driver->GetProcAddress("glReadPixels");
		glGetString = (PFNGLGETSTRINGPROC)driver->GetProcAddress("glGetString");
		glGenTextures = (PFNGLGENTEXTURESPROC)driver->GetProcAddress("glGenTextures");
		glBindTexture = (PFNGLBINDTEXTUREPROC)driver->GetProcAddress("glBindTexture");
		glTexParameterf = (PFNGLTEXPARAMETERFPROC)driver->GetProcAddress("glTexParameterf");
		glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)driver->GetProcAddress("glTexParameterfv");
		glTexImage2D = (PFNGLTEXIMAGE2DPROC)driver->GetProcAddress("glTexImage2D");
		glFramebufferTexture2D= (PFNGLFRAMEBUFFERTEXTURE2DPROC)driver->GetProcAddress("glFramebufferTexture2D");
		glDeleteTextures = (PFNGLDELETETEXTURESPROC)driver->GetProcAddress("glDeleteTextures");
		glDrawBuffer = (PFNGLDRAWBUFFERPROC)driver->GetProcAddress("glDrawBuffer");
		glReadBuffer = (PFNGLREADBUFFERPROC)driver->GetProcAddress("glReadBuffer");
		glBufferData = (PFNGLBUFFERDATAPROC)driver->GetProcAddress("glBufferData");
		glBufferSubData = (PFNGLBUFFERSUBDATAPROC)driver->GetProcAddress("glBufferSubData");
		glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)driver->GetProcAddress("glGetBufferSubData");
		glGenBuffers = (PFNGLGENBUFFERSPROC)driver->GetProcAddress("glGenBuffers");
		glBindBuffer = (PFNGLBINDBUFFERPROC)driver->GetProcAddress("glBindBuffer");
		glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)driver->GetProcAddress("glDeleteBuffers");
		glMapBuffer = (PFNGLMAPBUFFERPROC)driver->GetProcAddress("glMapBuffer");
		glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)driver->GetProcAddress("glUnmapBuffer");
		glIsBuffer = (PFNGLISBUFFERPROC)driver->GetProcAddress("glIsBuffer");
		glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)driver->GetProcAddress("glIsRenderbuffer");
		glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)driver->GetProcAddress("glBindRenderbuffer");
		glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)driver->GetProcAddress("glDeleteRenderbuffers");
		glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)driver->GetProcAddress("glGenRenderbuffers");
		glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)driver->GetProcAddress("glRenderbufferStorage");
		glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)driver->GetProcAddress("glGetRenderbufferParameteriv");
		glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)driver->GetProcAddress("glIsFramebuffer");
		glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)driver->GetProcAddress("glBindFramebuffer");
		glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)driver->GetProcAddress("glDeleteFramebuffers");
		glGenFramebuffers =  (PFNGLGENFRAMEBUFFERSPROC)driver->GetProcAddress("glGenFramebuffers");
		glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)driver->GetProcAddress("glCheckFramebufferStatus");
		glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)driver->GetProcAddress("glFramebufferRenderbuffer");
		glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)driver->GetProcAddress("glGetFramebufferAttachmentParameteriv");
		glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)driver->GetProcAddress("glGenerateMipmap");;
		glCreateShader = (PFNGLCREATESHADERPROC)driver->GetProcAddress("glCreateShader");
		glCreateProgram = (PFNGLCREATEPROGRAMPROC)driver->GetProcAddress("glCreateProgram");
		glDeleteProgram = (PFNGLDELETEPROGRAMPROC)driver->GetProcAddress("glDeleteProgram");
		glDeleteShader = (PFNGLDELETESHADERPROC)driver->GetProcAddress("glDeleteShader");
		glShaderSource = (PFNGLSHADERSOURCEPROC)driver->GetProcAddress("glShaderSource");
		glCompileShader = (PFNGLCOMPILESHADERPROC)driver->GetProcAddress("glCompileShader");
		glAttachShader = (PFNGLATTACHSHADERPROC)driver->GetProcAddress("glAttachShader");
		glDetachShader = (PFNGLDETACHSHADERPROC)driver->GetProcAddress("glDetachShader");
		glLinkProgram = (PFNGLLINKPROGRAMPROC)driver->GetProcAddress("glLinkProgram");
		glUseProgram = (PFNGLUSEPROGRAMPROC)driver->GetProcAddress("glUseProgram");
		glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)driver->GetProcAddress("glValidateProgram");
		glUniform1f = (PFNGLUNIFORM1FPROC)driver->GetProcAddress("glUniform1f");
		glUniform1fv = (PFNGLUNIFORM1FVPROC )driver->GetProcAddress("glUniform1fv");
		glUniform1i = (PFNGLUNIFORM1IPROC )driver->GetProcAddress("glUniform1i");
		glUniform1iv = (PFNGLUNIFORM1IVPROC )driver->GetProcAddress("glUniform1iv");
		glUniform2f = (PFNGLUNIFORM2FPROC )driver->GetProcAddress("glUniform2f");
		glUniform2fv = (PFNGLUNIFORM2FVPROC )driver->GetProcAddress("glUniform2fv");
		glUniform2iv = (PFNGLUNIFORM2IVPROC )driver->GetProcAddress("glUniform2iv");
		glUniform3f = (PFNGLUNIFORM3FPROC )driver->GetProcAddress("glUniform3f");
		glUniform3iv = (PFNGLUNIFORM3IVPROC )driver->GetProcAddress("glUniform3iv");
		glUniform3fv = (PFNGLUNIFORM3FVPROC )driver->GetProcAddress("glUniform3fv");
		glUniform3i = (PFNGLUNIFORM3IPROC )driver->GetProcAddress("glUniform3i");
		glUniform4f = (PFNGLUNIFORM4FPROC )driver->GetProcAddress("glUniform4f");
		glUniform4iv = (PFNGLUNIFORM4IVPROC )driver->GetProcAddress("glUniform4iv");
		glUniform4fv = (PFNGLUNIFORM4FVPROC )driver->GetProcAddress("glUniform4fv");
		glUniform4i = (PFNGLUNIFORM4IPROC )driver->GetProcAddress("glUniform4i");
		glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC )driver->GetProcAddress("glGetActiveUniform");
		glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)driver->GetProcAddress("glGetAttachedShaders");
		glGetShaderSource = (PFNGLGETSHADERSOURCEPROC )driver->GetProcAddress("glGetShaderSource");
		glGetUniformfv = (PFNGLGETUNIFORMFVPROC )driver->GetProcAddress("glGetUniformfv");
		glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC )driver->GetProcAddress("glGetUniformLocation");
		glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)driver->GetProcAddress("glVertexAttrib1d");
		glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)driver->GetProcAddress("glVertexAttrib1dv");
		glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)driver->GetProcAddress("glVertexAttrib1f");
		glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)driver->GetProcAddress("glVertexAttrib1fv");
		glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC )driver->GetProcAddress("glVertexAttrib1s");
		glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC )driver->GetProcAddress("glVertexAttrib1sv");
		glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC )driver->GetProcAddress("glVertexAttrib2d");
		glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC )driver->GetProcAddress("glVertexAttrib2dv");
		glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC )driver->GetProcAddress("glVertexAttrib2f");
		glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC )driver->GetProcAddress("glVertexAttrib2fv");
		glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC )driver->GetProcAddress("glVertexAttrib2s");
		glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC )driver->GetProcAddress("glVertexAttrib2sv");
		glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC )driver->GetProcAddress("glVertexAttrib3d");
		glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC )driver->GetProcAddress("glVertexAttrib3dv");
		glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC )driver->GetProcAddress("glVertexAttrib3f");
		glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC )driver->GetProcAddress("glVertexAttrib3fv");
		glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC )driver->GetProcAddress("glVertexAttrib3s");
		glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC )driver->GetProcAddress("glVertexAttrib3sv");
		glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC )driver->GetProcAddress("glVertexAttrib4d");
		glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC )driver->GetProcAddress("glVertexAttrib4dv");
		glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC )driver->GetProcAddress("glVertexAttrib4f");
		glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC )driver->GetProcAddress("glVertexAttrib4fv");
		glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC )driver->GetProcAddress("glVertexAttrib4s");
		glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC )driver->GetProcAddress("glVertexAttrib4sv");
		glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC )driver->GetProcAddress("glVertexAttribPointer");
		glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC )driver->GetProcAddress("glBindAttribLocation");
		glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC )driver->GetProcAddress("glEnableVertexAttribArray");
		glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC )driver->GetProcAddress("glDisableVertexAttribArray");
		glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC )driver->GetProcAddress("glGetVertexAttribdv");
		glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC )driver->GetProcAddress("glGetVertexAttribfv");
		glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC )driver->GetProcAddress("glGetVertexAttribiv");
		glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC )driver->GetProcAddress("glGetVertexAttribPointerv");
		glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC )driver->GetProcAddress("glGetActiveAttrib");
		glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)driver->GetProcAddress("glUniformMatrix2fv");
		glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)driver->GetProcAddress("glUniformMatrix3fv");
		glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)driver->GetProcAddress("glUniformMatrix4fv");
		glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)driver->GetProcAddress("glGetAttribLocation");
		glGetShaderiv = (PFNGLGETSHADERIVPROC)driver->GetProcAddress("glGetShaderiv");
		glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)driver->GetProcAddress("glGetShaderInfoLog");
		glGetProgramiv = (PFNGLGETPROGRAMIVPROC)driver->GetProcAddress("glGetProgramiv");
		glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)driver->GetProcAddress("glGenVertexArrays");
		glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)driver->GetProcAddress("glDeleteVertexArrays");
		glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)driver->GetProcAddress("glBindVertexArray");
		glDrawArrays = (PFNGLDRAWARRAYSPROC)driver->GetProcAddress("glDrawArrays");
		glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)driver->GetProcAddress("glDrawArraysIndirect");
		glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)driver->GetProcAddress("glDrawArraysInstanced");
		glDrawElements = (PFNGLDRAWELEMENTSPROC)driver->GetProcAddress("glDrawElements");
		glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)driver->GetProcAddress("glDrawElementsIndirect");
		glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)driver->GetProcAddress("glDrawElementsInstanced");
		glClear = (PFNGLCLEARPROC)driver->GetProcAddress("glClear");
		glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)driver->GetProcAddress("glCompressedTexImage2D");
		glActiveTexture = (PFNGLACTIVETEXTUREPROC)driver->GetProcAddress("glActiveTexture");
		glGetProgramiv = (PFNGLGETPROGRAMIVPROC)driver->GetProcAddress("glGetProgramiv");
		glBlendFunc = (PFNGLBLENDFUNCPROC)driver->GetProcAddress("glBlendFunc");
		glBlendEquation = (PFNGLBLENDEQUATIONPROC)driver->GetProcAddress("glBlendEquation");
		glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)driver->GetProcAddress("glBlendEquationi");
		glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)driver->GetProcAddress("glBlendEquationSeparate");
		glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)driver->GetProcAddress("glBlendEquationSeparatei");
		glEnablei = (PFNGLENABLEIPROC)driver->GetProcAddress("glEnablei");
		glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)driver->GetProcAddress("glBlendFuncSeparate");
		glBlendFunci = (PFNGLBLENDFUNCIPROC)driver->GetProcAddress("glBlendFunci");
		glBlendColor = (PFNGLBLENDCOLORPROC)driver->GetProcAddress("glBlendColor");
		glPixelStorei = (PFNGLPIXELSTOREIPROC)driver->GetProcAddress("glPixelStorei");
		glPixelStoref = (PFNGLPIXELSTOREFPROC)driver->GetProcAddress("glPixelStoref");
		glTexParameteri = (PFNGLTEXPARAMETERIPROC)driver->GetProcAddress("glTexParameteri");
		glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)driver->GetProcAddress("glGenerateMipmap");
		glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC)driver->GetProcAddress("glTexSubImage2D");
		glPolygonMode = (PFNGLPOLYGONMODEPROC)driver->GetProcAddress("glPolygonMode");
		glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)driver->GetProcAddress("glGetBufferParameteri64v");
		glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)driver->GetProcAddress("glGetBufferParameteriv");
		glGetBufferParameterui64v = (PFNGLGETBUFFERPARAMETERUI64VNVPROC)driver->GetProcAddress("glGetBufferParameterui64v");
		glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)driver->GetProcAddress("glGetBufferPointerv");
	}
}